{"version":3,"sources":["wangEditor.js"],"names":["global","factory","exports","module","define","amd","wangEditor","this","createElemByHTML","html","div","document","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","querySelectorAll","result","DomElement","nodeType","selectorResult","Array","replace","trim","indexOf","length","i","$","objForEach","obj","fn","key","hasOwnProperty","call","arrForEach","fakeArr","item","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","editor","$elem","type","_active","DropList","menu","opt","_this","$container","$title","titleHtml","replaceLang","addClass","append","list","onClick","_emptyFn","$list","forEach","elemHtml","value","$li","on","e","hideTimeoutId","setTimeout","hide","_rendered","_show","Head","droplist","width","_command","FontSize","FontName","config","fontNames","map","fontName","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","colors","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","MediaWrapper","options","contentHtml","contentType","height","onFocus","onBlur","id","WRAPPER_NAME","Toolbar","tools","justifyContainer","container","allTools","justify","events","$tool","NAME","console","log","style","textAlign","fullsize","autoplay","del","parentNode","remove","getEmbedLink","videoLink","vid","split","ampersandPosition","substring","Youtube","Menus","menus","getPasteText","clipboardData","originalEvent","pasteText","window","getData","getPasteHtml","filterStyle","ignoreImg","pasteHtml","docSplitHtml","getPasteImgs","items","test","push","getAsFile","getChildrenJSON","childNodes","curElem","elemResult","textContent","tag","nodeName","toLowerCase","attrData","attrList","attributes","attrListLength","attr","name","attrs","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$textContainerElem","$bar","UploadImg","Editor","toolbarSelector","textSelector","Error","editorId","customConfig","eventList","prototype","constructor","elem","clone","deep","cloneList","cloneNode","get","index","first","last","types","addEventListener","target","matches","off","removeEventListener","val","getAttribute","setAttribute","className","arr","filter","join","removeClass","css","currentStyle","styleArr","resultArr","show","$children","child","appendChild","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","find","text","focus","parentUntil","_currentElem","results","equal","insertBefore","$referenceNode","referenceNode","insertAfter","lastChild","nextSibling","offAll","emotions","title","content","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","fail","error","timeout","qiniu","youbute","UA","_ua","navigator","userAgent","isWebkit","isIE","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","str","langArgs","reg","clearTimeout","$menuELem","menuHeight","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","$body","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","event","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","$targetELem","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$currentTd","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","generateDom","isFigureType","checkFigureType","htmlStrArr","divDom","eventsBind","includes","el","$el","appendTo","$dom","build","htmlArr","toolName","htmlStr","_this3","destroy","p","embedLink","fToolbar","videoWrapperEl","videoWithWrapper","$wrapper","MenuConstructors","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","pHandle","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","keyCode","txtHtml","canDo","now","Date","flag","pasteTime","resetTime","ex","pasteFiles","img","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","_alert","alertInfo","debugInfo","customAlert","onload","callback","onerror","onabort","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","_initConfig","Object","assign","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName"],"mappings":"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","file":"wangEditor.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n\n    // new 一个对象\n};function $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook\n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false,\n\n    // 上传图片自定义提示方法\n    // customAlert: function (info) {\n    //     // 自定义上传提示\n    // },\n\n    // // 自定义上传图片\n    // customUploadImg: function (files, insert) {\n    //     // files 是 input 中选中的文件列表\n    //     // insert 是获取图片 url 后，插入到编辑器的方法\n    //     insert(imgUrl)\n    // }\n\n    youbute: {\n        width: 332,\n        height: 184\n    }\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n\n    // 遍历对象\n};function objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // tab end\n            }] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }] // second tab end\n        }]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/**\n * 多媒体内容容器\n * 使用此容器包裹多媒体内容，可屏蔽媒体自带的按钮（如播放、全屏），提供figcaption功能\n */\nvar WRAPPER_NAME = 'me-media-wrapper';\n\nfunction MediaWrapper(options) {\n    this.contentHtml = options.contentHtml;\n    this.contentType = options.contentType || 'video';\n    this.height = options.height;\n    this.width = options.width || '';\n    this.onFocus = options.onFocus;\n    this.onBlur = options.onBlur;\n    this.id = getRandom(WRAPPER_NAME);\n}\n\nMediaWrapper.prototype = {\n    generateDom: function generateDom() {\n        if (!this.contentHtml.trim()) return '';\n\n        var isFigureType = this.checkFigureType();\n        var style = '';\n\n        if (this.height) style += 'height: ' + this.height + 'px;';\n        if (this.width) style += 'width: ' + this.width + 'px;';\n\n        var htmlStrArr = [\n        // `<div class=\"${WRAPPER_NAME}\" id=\"${this.id}\" contenteditable=\"false\">`,\n        '<figure contenteditable=\"false\" style=\"' + style + '\">', '<div class=\"' + WRAPPER_NAME + '--placeholder\"></div>', '<div class=\"' + WRAPPER_NAME + '--content\">' + this.contentHtml + '</div>'];\n\n        if (isFigureType) htmlStrArr.push('\\n        <figcaption contenteditable=\"true\" data-default-value=\"Type caption for embed (optional)\">\\n        <span class=\"defaultValue\">Type caption for embed (optional)</span>\\n        <br></figcaption>\\n        ');\n\n        htmlStrArr.push('</figure>');\n\n        // this.eventsBind()\n\n        var divDom = document.createElement('div');\n        divDom.className = WRAPPER_NAME;\n        divDom.id = this.id;\n        divDom.setAttribute('contenteditable', 'false');\n        divDom.innerHTML = htmlStrArr.join('');\n\n        this.eventsBind(divDom);\n        return divDom;\n    },\n\n    checkFigureType: function checkFigureType() {\n        return ['image'].includes(this.contentType);\n    },\n\n    eventsBind: function eventsBind(el) {\n        var _this = this;\n\n        // console.log('22222')\n        var $el = $(el);\n\n        $el.on('click', function (e) {\n            console.log(e.target);\n            $('.' + WRAPPER_NAME).removeClass('is-active');\n            $el.addClass('is-active');\n            _this.onFocus && _this.onFocus($el);\n            console.log('1111111');\n            e.stopPropagation();\n        });\n        $('body').on('click', function () {\n            $el.removeClass('is-active');\n            _this.onBlur && _this.onBlur($el);\n        });\n    }\n};\n\n/**\n * 悬浮工具栏\n *\n */\nvar NAME = 'me-floating-toolbar';\n\nfunction Toolbar(options) {\n    var _this = this;\n\n    this.tools = options.tools || []; // array\n    this.editor = options.editor;\n    this.justifyContainer = options.justifyContainer;\n    this.container = null;\n\n    this.allTools = {\n        justify: {\n            html: '<span class=\"tool--justify\"><i class=\"w-e-icon-paragraph-left clickable\"></i><i class=\"w-e-icon-paragraph-center clickable\"></i><i class=\"w-e-icon-paragraph-right clickable\"></i></span>',\n            events: function events() {\n                var $tool = $('.' + NAME);\n                $tool.on('click', '.w-e-icon-paragraph-left', function () {\n                    console.log('居左');\n                    _this.justifyContainer.style.textAlign = 'left';\n                });\n                $tool.on('click', '.w-e-icon-paragraph-center', function () {\n                    console.log('居中');\n                    _this.justifyContainer.style.textAlign = 'center';\n                });\n                $tool.on('click', '.w-e-icon-paragraph-right', function () {\n                    console.log('居右');\n                    _this.justifyContainer.style.textAlign = 'right';\n                });\n            }\n        },\n        fullsize: {\n            html: '<span class=\"tool--fullsize clickable\"><i class=\"w-e-icon-font\"></i></span>',\n            events: function events() {\n                console.log('全屏');\n            }\n        },\n        autoplay: {\n            html: '<span class=\"tool--autoplay clickable\"><i class=\"w-e-icon-bold\"></i>自动播放</span>',\n            events: function events() {\n                console.log('自动播放');\n            }\n        },\n        del: {\n            html: '<span class=\"tool--del clickable\"><i class=\"w-e-icon-trash-o\"></i></span>',\n            events: function events() {\n                var $tool = $('.' + NAME);\n                $tool.on('click', '.w-e-icon-trash-o', function () {\n                    _this.container.parentNode.remove(); // FIXME: 删除父元素\n                });\n            }\n        }\n    };\n}\n\nToolbar.prototype = {\n    constructor: Toolbar,\n\n    appendTo: function appendTo($dom) {\n        $dom.appendChild(this.build());\n        this.container = $dom; // 保存父容器\n        this.eventsBind();\n    },\n\n    build: function build() {\n        var _this2 = this;\n\n        var htmlArr = ['<div class=\"me-floating-toolbar--inner\">'];\n        this.tools.forEach(function (toolName) {\n            htmlArr.push(_this2.allTools[toolName].html);\n        });\n\n        var htmlStr = htmlArr.join('') + '</div>';\n        var div = document.createElement('div');\n        div.className = NAME;\n        div.innerHTML = htmlStr;\n        return div;\n    },\n\n    eventsBind: function eventsBind() {\n        var _this3 = this;\n\n        this.tools.forEach(function (toolName) {\n            _this3.allTools[toolName].events();\n        });\n    },\n\n\n    destroy: function destroy() {\n        console.log(this.container);\n        if (this.container) {\n            $(this.container).find('.' + NAME).remove();\n        }\n    }\n};\n\n/**\n * 插入 YouTube 视频\n */\n// 获取视频id\n// videoLink示例： https://www.youtube.com/watch?v=-2r83aFgdBg&a=b\n//                https://www.youtube.com/embed/-2r83aFgdBg?start=60\nfunction getEmbedLink(videoLink) {\n    if (videoLink.indexOf('youtube.com/embed/') > -1) return videoLink;\n\n    var vid = videoLink.split('v=')[1];\n    var ampersandPosition = vid.indexOf('&');\n    if (ampersandPosition !== -1) {\n        vid = vid.substring(0, ampersandPosition);\n    }\n    return 'https://www.youtube.com/embed/' + vid;\n}\n\nfunction Youtube(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\nYoutube.prototype = {\n    constructor: Youtube,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        var p = new Panel(this, {\n            width: 350,\n            tabs: [{\n                title: '插入Youtube链接',\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"https://www.youtube.com/watch?v=-2r83aFgdBg\"\\n                        value=\"https://www.youtube.com/watch?v=IKAk3nV7hY4&t=15s\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>\\n                    ',\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // val: https://www.youtube.com/watch?v=-2r83aFgdBg\n                        // result: <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/-2r83aFgdBg\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                        if (val) {\n                            var embedLink = getEmbedLink(val);\n                            var htmlStr = '<iframe width=\"100%\" height=\"' + _this.editor.config.youbute.height + '\" src=\"' + embedLink + '\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>';\n                            var fToolbar = void 0;\n                            var videoWrapperEl = void 0;\n                            var videoWithWrapper = new MediaWrapper({\n                                contentHtml: htmlStr,\n                                contentType: 'video',\n                                // height: this.editor.config.youbute.height,\n                                width: _this.editor.config.youbute.width,\n                                onFocus: function onFocus($wrapper) {\n                                    if (!fToolbar) {\n                                        fToolbar = new Toolbar({\n                                            tools: ['justify', 'fullsize', 'autoplay', 'del'],\n                                            editor: _this.editor,\n                                            justifyContainer: videoWrapperEl\n                                        });\n                                        fToolbar.appendTo($wrapper.find('figure')[0]);\n                                        _this.editor.selection.createRangeByElem($wrapper, false); // 设置选取到结束位置\n                                        _this.editor.selection.restoreSelection();\n                                    }\n                                },\n                                onBlur: function onBlur($wrapper) {\n                                    if (fToolbar) {\n                                        fToolbar.destroy();\n                                        fToolbar = null;\n                                    }\n                                }\n                            });\n                            videoWrapperEl = videoWithWrapper.generateDom();\n                            _this._insert(videoWrapperEl);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n\n        p.show();\n\n        this.panel = p;\n    },\n\n    _insert: function _insert(el) {\n        this.editor.cmd.do('insertHTML', '<p><br></p>');\n        this.editor.cmd.do('insertElem', [el]);\n        this.editor.selection.createRangeByElem([el.parentNode], false); // 设置选取到结束位置\n        // this.editor.selection.restoreSelection()\n        // this.editor.cmd.do('insertElem', [document.createElement('p')])\n        this.editor.cmd.do('insertHTML', '<p><br></p>');\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\nMenuConstructors.youbute = Youtube;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}.me-floating-toolbar {  position: absolute;  top: 100%;  left: 50%;  transform: translateX(-50%);  padding: 10px;  box-shadow: 0 5px 18px rgba(0, 0, 0, 0.2);  background: #fff;}.me-floating-toolbar .clickable {  cursor: pointer;}.me-floating-toolbar .me-floating-toolbar--inner > span {  margin-right: 6px;  white-space: nowrap;}.me-floating-toolbar .tool--justify i {  margin-right: 6px;}.me-floating-toolbar .tool--justify i:last-of-type {  margin-right: 0;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.me-media-wrapper {  position: relative;}.me-media-wrapper > figure {  position: relative;  display: inline-block;  *display: inline;  *zoom: 1;}.me-media-wrapper .me-media-wrapper--placeholder {  position: absolute;  top: 0;  bottom: 0;  left: 0;  width: 100%;  background: rgba(0, 0, 0, 0.1);  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\\'#19000000\\', endColorstr=\\'#19000000\\');  z-index: 1;}:root .me-media-wrapper .me-media-wrapper--placeholder {  filter: none\\\\9;}.me-media-wrapper.is-active iframe {  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.7);  border: 1px solid orange;}.w-e-toolbar {  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n"]}